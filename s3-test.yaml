# Azure DevOps pipeline for AWS S3 Creation.

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - terraform_azure

pool:
  vmImage: 'ubuntu-latest'	

stages :
  - stage: validate
    jobs:
    - job: validate
      continueOnError: false
      steps:
      - task: TerraformInstaller@0
        displayName: 'install'
        inputs:
          terraformVersion: 'latest'
      - task: TerraformTaskV1@0
        displayName: 'init'
        inputs:
          provider: 'aws'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/_grvtech1991_terraform_azure'
          commandOptions: '-reconfigure'
          backendServiceAWS: 'terraform'
          backendAWSBucketName: 'terraform-1991'
          backendAWSKey: 'terraform.tfstate'
          
      - task: TerraformTaskV1@0
        displayName: 'validate'
        inputs:
          provider: 'aws'
          command: 'validate'
           
  - stage: plan
    dependsOn: [validate]
    condition: succeeded('validate')
    jobs:
      - job: terraform_plan_develop
        steps:
              - checkout: self
              - task: TerraformInstaller@0
                displayName: 'install'
                inputs:
                  terraformVersion: 'latest'
              - task: TerraformTaskV1@0
                displayName: 'init'
                inputs:
                  provider: 'aws'
                  command: 'init'
                  workingDirectory: '$(System.DefaultWorkingDirectory)/_grvtech1991_terraform_azure'
                  commandOptions: '-reconfigure'
                  backendServiceAWS: 'terraform'
                  backendAWSBucketName: 'terraform-1991'
                  backendAWSKey: 'terraform.tfstate'
              - task: TerraformTaskV1@0
                displayName: 'plan'
                inputs:
                  provider: 'aws'
                  command: 'plan'
                  commandOptions: '-out s3-plan'
				  workingDirectory: '$(System.DefaultWorkingDirectory)/_grvtech1991_terraform_azure'
                  environmentServiceNameAWS: 'terraform'
 
  - stage: apply
    dependsOn: [plan]
    condition: succeeded('plan')
    jobs:
      - job: terraform_apply_develop
        steps:
              - checkout: self
              - task: TerraformInstaller@0
                displayName: 'install'
                inputs:
                  terraformVersion: 'latest'
              - task: TerraformTaskV1@0
                displayName: 'init'
                inputs:
                  provider: 'aws'
                  command: 'init'
                  workingDirectory: '$(System.DefaultWorkingDirectory)/_grvtech1991_terraform_azure'
                  commandOptions: '-reconfigure'
                  backendServiceAWS: 'terraform'
                  backendAWSBucketName: 'terraform-1991'
                  backendAWSKey: 'terraform.tfstate'
              - task: TerraformTaskV1@0
                displayName: 'plan'
                inputs:
                  provider: 'aws'
                  command: 'plan'
                  commandOptions: '-out s3-plan'
				  workingDirectory: '$(System.DefaultWorkingDirectory)/_grvtech1991_terraform_azure'
                  environmentServiceNameAWS: 'terraform'
              - task: TerraformTaskV1@0
                displayName: 'apply'
                inputs:
                  provider: 'aws'
                  command: 'apply'
                  commandOptions: 's3-plan'
                  workingDirectory: '$(System.DefaultWorkingDirectory)/_grvtech1991_terraform_azure'
                  environmentServiceNameAWS: 'terraform'
